import express from 'express';
import fs from 'fs';
import path from 'path';

const app = express();
const routesPath = path.join(__dirname, 'routes');

fs.readdirSync(routesPath).forEach((file) => {
  if (file === 'index.ts' || file === 'index.js') return; // skip index file
  const route = require(path.join(routesPath, file)).default;
  const routeName = file.replace(/Routes?\.(ts|js)/, '');
  app.use(`/${routeName}`, route);
});
import authRoute from './authRoutes';
import walletRoute from './walletRoutes';
import productRoute from './productRoutes';
import orderRoute from './orderRoutes';
import cartRoute from './cartRoutes';
import xionRoute from './xionRoutes';
import categoryRoute from './categoryRoutes';

const routes = [
  { path: '/auth', handler: authRoute },
  { path: '/wallet', handler: walletRoute },
  { path: '/products', handler: productRoute },
  { path: '/orders', handler: orderRoute },
  { path: '/cart', handler: cartRoute },
  { path: '/xion', handler: xionRoute },
  { path: '/categories', handler: categoryRoute },
];

export default routes;
import express from 'express';
import routes from './routes'; // this is the array of route configs

const app = express();

// Map through the routes array and register each route
routes.map(({ path, handler }) => {
  app.use(path, handler);
});

// Or equivalently, using forEach (more semantically appropriate for side effects):
// routes.forEach(({ path, handler }) => app.use(path, handler));
import express from 'express';
import {
  authRoute,
  walletRoute,
  productRoute,
  orderRoute,
  cartRoute,
  xionRoute,
  categoryRoute,
} from './routes';

const app = express();

app.use('/auth', authRoute);
app.use('/wallet', walletRoute);
app.use('/products', productRoute);
app.use('/orders', orderRoute);
app.use('/cart', cartRoute);
app.use('/xion', xionRoute);
app.use('/categories', categoryRoute);

// ...rest of your server setup
routes.forEach(({ path, handler }) => app.use(path, handler));
